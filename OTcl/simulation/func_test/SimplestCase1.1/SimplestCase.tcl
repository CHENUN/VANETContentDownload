# The Case with one vehicle and AP to test the problem of the handover attempt
# Author: Zou Zhenhua

# ======================================================================
# common parameters
# ======================================================================
set val(chan)		Channel/WirelessChannel			;# channel type
set val(prop)		Propagation/TwoRayGround		;# radio-propagation model
set val(netif)		Phy/WirelessPhy				;# network interface type
set val(mac)		Mac/802_11				;# MAC type
set val(ifq)		Queue/DropTail/PriQueue			;# interface queue type
set val(ll)		LL					;# link layer type
set val(ant)		Antenna/OmniAntenna			;# antenna model
set val(ifqlen)		50					;# max packet in ifq
set val(MN)		1					;# number of  vehicles
set val(AP)		1					;# number of Access Point
set val(rp)		DSDV					;# routing protocol
set val(cp)		SimplestCaseTrace			;# the mobility file generated by VanetMobiSim
set val(stop)		350.0					;# simulation time
set val(nn)		[expr $val(AP)+$val(MN)]		;# number of mobilenodes & Access Point

# ======================================================================
# Main Program
# ======================================================================

# Initialize Global Variables
set ns_     [new Simulator]

$ns_ use-newtrace
#set tracefd [open "| awk -f filter.awk > wireless.tr" w]
set tracefd [open "wireless.tr" w]
$ns_ trace-all $tracefd

set namtrace [open out.nam w]
$ns_ namtrace-all-wireless $namtrace 1000 1000

# Set Up Topography Object
set topo       [new Topography]
$topo load_flatgrid 1000 1000

# Create God
create-god $val(nn)

# Configure default data rate for 802.11
Mac/802_11 set dataRate_ 11Mb
# Disable RTS/CTS
Mac/802_11 set RTSThreshold_ 3000

# Configure Node
$ns_ node-config -adhocRouting $val(rp) \
		 -llType $val(ll) \
		 -macType $val(mac) \
		 -ifqType $val(ifq) \
		 -ifqLen $val(ifqlen) \
		 -antType $val(ant) \
		 -propType $val(prop) \
		 -phyType $val(netif) \
		 -topoInstance $topo \
		 -agentTrace ON \
		 -routerTrace OFF \
		 -macTrace OFF \
		 -movementTrace OFF \
		 -channel [new $val(chan)]
			 
# Define Vehicles & Access Point nodes
for {set i 0} {$i < $val(nn) } {incr i} {
	set node_($i) [$ns_ node]
	$node_($i) random-motion 0
}

# Define Node Movement Model
puts "Loading mobility pattern..."
source $val(cp)

for {set i 0} {$i < $val(nn)} {incr i} {
    # 10 defines the node size in nam, must adjust it according to your scenario 
    # The function must be called after mobility model is defined
    $ns_ initial_node_pos $node_($i) 10
}


# ======================================================================
# Traffic Type
# ======================================================================
# Access Point
set sink [new Agent/Null]
$ns_ attach-agent $node_(1) $sink

# node 0
set udp_(0) [new Agent/UDP]
$udp_(0) set packetSize_ 512
$ns_ attach-agent $node_(0) $udp_(0)

set cbr_(0) [new Application/Traffic/CBR]
$cbr_(0) set packetSize_ 512
$cbr_(0) attach-agent $udp_(0)

$ns_ connect $udp_(0) $sink

$ns_ at 1 "$cbr_(0) start"
$ns_ at $val(stop) "$cbr_(0) stop"

# ======================================================================
# General stop 
# ======================================================================
$ns_ at $val(stop).9999 "puts \"NS EXITING...\" ; $ns_ halt"
$ns_ at $val(stop) "stop"

# ======================================================================
# exit function
# ======================================================================
proc stop {} {
    global ns_ tracefd namtrace
    $ns_ flush-trace
    close $tracefd
    close $namtrace
}

# ======================================================================
# start
# ======================================================================
puts "Starting Simulation..."
$ns_ run
